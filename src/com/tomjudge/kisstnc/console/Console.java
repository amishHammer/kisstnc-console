/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tomjudge.kisstnc.console;

import com.tomjudge.kisstnc.KissFrame;
import com.tomjudge.kisstnc.KissFrameListener;
import com.tomjudge.kisstnc.KissTnc;
import com.tomjudge.kisstnc.MobilinkdTnc;
import java.nio.charset.StandardCharsets;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import java.util.logging.Level;
import java.util.logging.LogManager;
import java.util.logging.Logger;
import jssc.SerialInputStream;
import jssc.SerialOutputStream;
import jssc.SerialPort;
import jssc.SerialPortException;
/**
 *
 * @author amishhammer
 */
public class Console extends javax.swing.JFrame {
    private HTMLEditorKit kit;
    private HTMLDocument doc;
    private SerialPort serialPort;
    private SerialInputStream iStream;
    private SerialOutputStream oStream;
    private MobilinkdTnc tnc;
    private DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
    /**
     * Creates new form Console
     */
    public Console() {
        initComponents();
        kit = new HTMLEditorKit();
        doc = new HTMLDocument();
        this.consoleEditorPane.setEditorKit(kit);
        this.consoleEditorPane.setDocument(doc);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendPanel = new javax.swing.JPanel();
        sendTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        consoleScrollPane = new javax.swing.JScrollPane();
        consoleEditorPane = new javax.swing.JEditorPane();
        connectPanel = new javax.swing.JPanel();
        portTextField = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KISS TNC Console");
        setMinimumSize(new java.awt.Dimension(800, 600));

        sendPanel.setLayout(new java.awt.GridLayout(1, 0));

        sendTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendTextFieldActionPerformed(evt);
            }
        });
        sendPanel.add(sendTextField);

        sendButton.setMnemonic('s');
        sendButton.setText("Send");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        sendPanel.add(sendButton);

        getContentPane().add(sendPanel, java.awt.BorderLayout.PAGE_END);

        consoleEditorPane.setEditable(false);
        consoleEditorPane.setContentType("text/html"); // NOI18N
        consoleScrollPane.setViewportView(consoleEditorPane);

        getContentPane().add(consoleScrollPane, java.awt.BorderLayout.CENTER);

        connectPanel.setLayout(new java.awt.GridLayout(1, 0));

        portTextField.setText("/dev/tty.TNC-1-DevB");
        connectPanel.add(portTextField);

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });
        connectPanel.add(connectButton);

        getContentPane().add(connectPanel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String send = this.sendTextField.getText();
        if (send.length() == 0) {
            return;
        }
        
        try {
            this.kit.insertHTML(this.doc, this.doc.getLength(), "<font color='gray'>"+dateFormat.format(new Date())+" - </font><font color='red'>"+send+"</font><br/>", 0, 0, null);
            tnc.sendFrame(new KissFrame(send.getBytes(StandardCharsets.US_ASCII), KissFrame.FrameType.DATA));
            this.sendTextField.setText("");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void sendTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendTextFieldActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        
            
        try {
            serialPort = new SerialPort(this.portTextField.getText());
            serialPort.openPort();//Open serial port
            serialPort.setParams(SerialPort.BAUDRATE_9600, 
                                 SerialPort.DATABITS_8,
                                 SerialPort.STOPBITS_1,
                                 SerialPort.PARITY_NONE);//Set params. Also you can set params by this string: serialPort.setParams(9600, 8, 1, 0);
            iStream = new SerialInputStream(serialPort);
            iStream.setTimeout(10000);
            oStream = new SerialOutputStream(serialPort);
            tnc = new MobilinkdTnc(iStream,oStream);
            tnc.registerFrameListener(new KissFrameListener() {

                @Override
                public void frameReceived(KissFrame frame) {
                    
                    try {
                        if (frame.getType() != KissFrame.FrameType.DATA) {
                            return;
                        }
                        kit.insertHTML(doc, doc.getLength(), "<font color='gray'>"+dateFormat.format(new Date())+" - </font><font color='blue'>"+frame.toString()+"</font><br/>", 0, 0, null);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            
            });
            tnc.start();
            
            tnc.getCurrentConfig();
            this.sendButton.setEnabled(true);
            this.connectButton.setEnabled(false);
        } catch (SerialPortException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }

        
           
    }//GEN-LAST:event_connectButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Console().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectButton;
    private javax.swing.JPanel connectPanel;
    private javax.swing.JEditorPane consoleEditorPane;
    private javax.swing.JScrollPane consoleScrollPane;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton sendButton;
    private javax.swing.JPanel sendPanel;
    private javax.swing.JTextField sendTextField;
    // End of variables declaration//GEN-END:variables
}
